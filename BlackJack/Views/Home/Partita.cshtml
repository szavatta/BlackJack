@{
    ViewData["Title"] = "Home Page";
    @model Classes.Gioco;
}
@Html.Hidden("IdGiocatore", (string)ViewBag.IdGiocatore)

<div class="text-center p-2">
    <div class="row">
        <div>
            <h2>@Model.Nome</h2>
        </div>
        <div class="col-lg-3 pt-4">
            <div id="scarti" class="w-100 d-none">
                <img src="" />
                <div id="num-scarti"></div>
            </div>
        </div>
        <div id="mazziere" class="col-lg-6 p-2">
            <div class="punti"></div>
            <div id="nome-mazziere" class="fw-bold"></div>
            <div id="cassa-mazziere"></div>
            <div id="carte-mazziere" class="d-flex justify-content-center"></div>
        </div>
        <div class="col-lg-2 offset-lg-1 mb-1 div-partecipa">
            <input type='text' value='' class='txtNomeGiocatore form-control ml-1 mb-1 d-none' placeholder="Nome giocatore" />
            @Html.DropDownList("listaStrategie", (SelectList)ViewBag.Strategie, "Seleziona una strategia", new { @class = "form-select" })
            <input type='button' value='Partecipa' class='btnPartecipa btn btn-info w-100 d-none mt-1' />
        </div>

        <div id="giocatori" class="col-lg-12 mt-5 row">
            <div class="giocatorestamp col-lg-3 d-none p-2 border border-light">
                <div class="punti"></div>
                <div class="nome-giocatore fw-bold"></div>
                <div class="cassa-giocatore"></div>
                <div class="perc"></div>
                <div class="errori bg-danger text-white mb-1 d-none">Errori: <span class="numerrori">0</span><span class="errore"></span></div>
                <div class="carte-giocatore d-flex justify-content-center"></div>
                <div class="opzioni-giocatore d-flex justify-content-center">
                    <input type='text' value='' class='txtPuntata form-control ml-1 d-none' />
                    <input type='button' value='Punta' class='btnPunta btn btn-info d-none' />
                    <input type='button' value='Stai' class='btnStai btn btn-info d-none' />
                    <input type='button' value='Chiama' class='btnChiama btn btn-info d-none' />
                    <input type='button' value='Continua' class='btnContinua btn btn-info d-none' />
                    <input type='button' value='Esci' class='btnEsci btn btn-info d-none' />
                    <input type='button' value='Raddoppia' class='btnRaddoppia btn btn-info d-none' />
                    <input type='button' value='Dividi' class='btnSplit btn btn-info d-none' />
                    <input type='button' value='Arresa' class='btnArresa btn btn-info d-none' />
                    <input type='button' value='Nuova mano' class='btnNuovaMano btn btn-info d-none' />
                    <input type='button' value='Assicurazione SI' class='btnAssicurazione btn btn-info d-none' scelta="1"/>
                    <input type='button' value='Assicurazione NO' class='btnAssicurazione btn btn-info d-none' scelta="0"/>
                </div>
                <div class="strategia"></div>
                <div class="fiches-giocatore d-flex flex-wrap justify-content-center mt-2 d-none">
                    <img src="~/Fiches/1.png" valore="1" />
                    <img src="~/Fiches/5.png" valore="5" />
                    <img src="~/Fiches/10.png" valore="10" />
                    <img src="~/Fiches/25.png" valore="25" />
                    <img src="~/Fiches/50.png" valore="50" />
                    <img src="~/Fiches/100.png" valore="100" />
                    <img src="~/Fiches/500.png" valore="500" />
                    <img src="~/Fiches/x.png" valore="x" />
                </div>
            </div>
        </div>
    </div>

</div>

<script>

    let timer = null;
    let errori = 0;
    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);
    let idPartita = location.pathname.split("/").slice(-1)[0];
    if (idPartita == "test") {
        $(".errori").removeClass("d-none");
    }

    SetInterval();

    $(document).ready(function () {

        $(document).on("click", ".btnPunta", function () {
            let idGiocatore = $(this).closest(".giocatore").attr("idGiocatore");
            let puntata = $(this).parent().find(".txtPuntata").val();
            if (puntata <= 0) {
                ShowMessage("Puntata errata");
                return false;
            }

            $.ajax({
                type: "POST",
                url: "/Home/Punta",
                data: {
                    id: idPartita,
                    idGiocatore: idGiocatore,
                    puntata: puntata
                },
                success: function (ret) {
                    let partita = JSON.parse(ret.gioco);
                    DisegnaTavolo(partita);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    var primaRiga = jqXHR.responseText.split('\r\n')[0];
                    var messaggio = primaRiga.replace(/^.*?:\s*/, '');
                    ShowMessage(messaggio);
                    console.log(jqXHR);
                }
            });

        });

        $(document).on("click", ".btnStai,.btnContinua", function () {
            let idGiocatore = $(this).closest(".giocatore").attr("idGiocatore");
            let puntata = $(this).parent().find(".txtPuntata").val();

            $.ajax({
                type: "POST",
                url: "/Home/Stai",
                data: {
                    id: idPartita,
                    idGiocatore: idGiocatore,
                    puntata: puntata
                },
                success: function (ret) {

                    if (idPartita == "test" && ret.scelta != "Stai") {
                        errori++;
                        $("[idgiocatore='" + idGiocatore + "']").find(".errore").text(" - Scelta corretta: " + ret.scelta);
                    }
                    let partita = JSON.parse(ret.gioco);
                    DisegnaTavolo(partita);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                }
            });
        });

        $(document).on("click", ".btnRaddoppia", function () {
            let idGiocatore = $(this).closest(".giocatore").attr("idGiocatore");
            let puntata = $(this).parent().find(".txtPuntata").val();

            $.ajax({
                type: "POST",
                url: "/Home/Raddoppia",
                data: {
                    id: idPartita,
                    idGiocatore: idGiocatore,
                    puntata: puntata
                },
                success: function (ret) {
                    if (ret.scelta == "?") {
                        ShowConfirm("Confermi il raddoppio?", function () {
                            $.ajax({
                                type: "POST",
                                url: "/Home/Raddoppia",
                                data: {
                                    id: idPartita,
                                    idGiocatore: idGiocatore,
                                    puntata: puntata,
                                    forza: true
                                },
                                success: function (ret) {
                                    if (idPartita == "test" && ret.scelta != "Raddoppia") {
                                        errori++;
                                        $("[idgiocatore='" + idGiocatore + "']").find(".errore").text(" - Scelta corretta: " + ret.scelta);
                                    }
                                    let partita = JSON.parse(ret.gioco);
                                    DisegnaTavolo(partita);
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    console.log(jqXHR);
                                }
                            });
                        });
                    } else {
                        if (idPartita == "test" && ret.scelta != "Raddoppia") {
                            errori++;
                            $("[idgiocatore='" + idGiocatore + "']").find(".errore").text(" - Scelta corretta: " + ret.scelta);
                        }
                        let partita = JSON.parse(ret.gioco);
                        DisegnaTavolo(partita);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                }
            });
        });

        $(document).on("click", ".btnArresa", function () {
            let idGiocatore = $(this).closest(".giocatore").attr("idGiocatore");
            let puntata = $(this).parent().find(".txtPuntata").val();

            $.ajax({
                type: "POST",
                url: "/Home/Arresa",
                data: {
                    id: idPartita,
                    idGiocatore: idGiocatore,
                    puntata: puntata
                },
                success: function (ret) {
                    if (ret.scelta == "?") {
                        ShowConfirm("Confermi l'arresa?", function () {
                            $.ajax({
                                type: "POST",
                                url: "/Home/Arresa",
                                data: {
                                    id: idPartita,
                                    idGiocatore: idGiocatore,
                                    puntata: puntata
                                },
                                success: function (ret) {
                                    let partita = JSON.parse(ret.gioco);
                                    DisegnaTavolo(partita);
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    console.log(jqXHR);
                                }
                            });
                        });
                    } else {
                        if (idPartita == "test" && ret.scelta != "Raddoppia") {
                            errori++;
                            $("[idgiocatore='" + idGiocatore + "']").find(".errore").text(" - Scelta corretta: " + ret.scelta);
                        }
                        let partita = JSON.parse(ret.gioco);
                        DisegnaTavolo(partita);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                }
            });
        });

        $(document).on("click", ".btnEsci", function () {
            let idGiocatore = $(this).closest(".giocatore").attr("idGiocatore");
            let puntata = $(this).parent().find(".txtPuntata").val();

            ShowConfirm("Confermi l'uscita?", function () {

                $.ajax({
                    type: "POST",
                    url: "/Home/Esci",
                    data: {
                        id: idPartita,
                        idGiocatore: idGiocatore,
                        puntata: puntata
                    },
                    success: function (json) {
                        location.href = "/";
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log(jqXHR);
                    }
                });
            });
        });

        $(document).on("click", ".btnChiama", function () {
            let idGiocatore = $(this).closest(".giocatore").attr("idGiocatore");
            let puntata = $(this).parent().find(".txtPuntata").val();

            $.ajax({
                type: "POST",
                url: "/Home/Chiama",
                data: {
                    id: idPartita,
                    idGiocatore: idGiocatore,
                    puntata: puntata
                },
                success: function (ret) {
                    if (ret.scelta == "?") {
                        ShowConfirm("Confermi la chiamata?", function () {
                            $.ajax({
                                type: "POST",
                                url: "/Home/Chiama",
                                data: {
                                    id: idPartita,
                                    idGiocatore: idGiocatore,
                                    puntata: puntata,
                                    forza: true
                                },
                                success: function (ret) {
                                    if (idPartita == "test" && ret.scelta != "Chiama") {
                                        errori++;
                                        $("[idgiocatore='" + idGiocatore + "']").find(".errore").text(" - Scelta corretta: " + ret.scelta);
                                    }
                                    let partita = JSON.parse(ret.gioco);
                                    DisegnaTavolo(partita);
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    console.log(jqXHR);
                                }
                            });
                        });
                    } else {
                        if (idPartita == "test" && ret.scelta != "Chiama") {
                            errori++;
                            $("[idgiocatore='" + idGiocatore + "']").find(".errore").text(" - Scelta corretta: " + ret.scelta);
                        }
                        let partita = JSON.parse(ret.gioco);
                        DisegnaTavolo(partita);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                }
            });
        });

        $(document).on("click", ".btnPartecipa", function () {

            $.ajax({
                type: "POST",
                url: "/Home/Partecipa",
                data: {
                    id: idPartita,
                    nome: $(".txtNomeGiocatore").val(),
                    strategia: $("#listaStrategie").val()
                },
                success: function (data) {
                    $("#IdGiocatore").val(data.idGiocatore);
                    $(".giocatore").remove();
                    let partita = JSON.parse(data.json);
                    DisegnaTavolo(partita);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    var primaRiga = jqXHR.responseText.split('\r\n')[0];
                    var messaggio = primaRiga.replace(/^.*?:\s*/, '');
                    ShowMessage(messaggio);
                    console.log(jqXHR);
                }
            });
        });

        $(document).on("click", ".btnSplit", function () {

            let idGiocatore = $(this).closest(".giocatore").attr("idGiocatore");

            $.ajax({
                type: "POST",
                url: "/Home/Split",
                data: {
                    id: idPartita,
                    idGiocatore: idGiocatore
                },
                success: function (ret) {
                    if (idPartita == "test" && ret.scelta != "Dividi") {
                        errori++;
                        $("[idgiocatore='" + idGiocatore + "']").find(".errore").text(" - Scelta corretta: " + ret.scelta);
                    }
                    let partita = JSON.parse(ret.gioco);
                    DisegnaTavolo(partita);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                }
            });
        });

        $(document).on("click", ".btnAssicurazione", function () {
            let idGiocatore = $(this).closest(".giocatore").attr("idGiocatore");
            let scelta = $(this).attr("scelta");
            Assicurazione(idPartita, idGiocatore, scelta);
        });

        $(document).on("click", ".btnNuovaMano", function () {
            NuovaMano();
            $(".giocatore .nome-giocatore:empty").closest(".giocatore").remove();
        });

        $(document).on("click", ".fiches-giocatore img", function () {
            var input = $(this).closest(".giocatore").find(".txtPuntata");
            if ($(this).attr("valore") == "x") {
                input.val("");
            } else {
                var valore = parseInt($(this).attr("valore"));
                var prec = parseInt(input.val());
                if (isNaN(prec)) {
                    prec = 0;
                }
                var nuovovalore = prec + valore;
                input.val(nuovovalore);
            }
        });


        GetPartita()
    })

    function Assicurazione(idPartita, idGiocatore, scelta) {
        $.ajax({
            type: "POST",
            url: "/Home/Assicurazione",
            data: {
                id: idPartita,
                idGiocatore: idGiocatore,
                scelta: scelta
            },
            success: function (ret) {
                let partita = JSON.parse(ret.gioco);
                DisegnaTavolo(partita);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR);
            }
        });

    }

    function GetPartita() {

        $.ajax({
            type: "POST",
            url: "/Home/GetPartita",
            data: {
                id: idPartita
            },
            success: function (json) {
                let partita = JSON.parse(json);
                DisegnaTavolo(partita);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR);
            }
        });

    }

    function GetPartita2() {

        var ret;
        $.ajax({
            type: "GET",
            async: false,
            url: "/Home/GetPartita",
            data: {
                id: idPartita
            },
            success: function (json) {
                ret = JSON.parse(json);
            }
        });
        return ret;
    }

    function GetPunteggioGiocatore(idGiocatore) {
        let partita = GetPartita2();
        let punteggio = partita.Giocatori.filter(q => q.Id == idGiocatore)[0].Punteggio;
        return punteggio;
    }

    function DisegnaTavolo(partita, trueCount) {
        PulisceTavolo();
        $("#nome-mazziere").html(partita.Mazziere.Nome);
        $("#mazziere .punti").css({'left' : ($("#mazziere").position().left + $("#mazziere").width() - 50) + 'px'})
            .css({'top' : ($("#mazziere").position().top + 10) + 'px'})
            .html(partita.Mazziere.CartaCoperta == false ? partita.Mazziere.Punteggio : "");
        $("#cassa-mazziere").html("Cassa: " + partita.Mazziere.SoldiTotali + " - Giri: " + partita.Giri);
        partita.Mazziere.Carte.forEach(function (carta, index) {
            let left = index * 30 + 165 - partita.Mazziere.Carte.length * 17 + (($("#mazziere").width() - 400) / 2);

            if (partita.Mazziere.CartaCoperta == true && index == 1) {
                $("#carte-mazziere")
                    .append("<div class='carta sormonta' style='left:" + left + "px'><img src='/Carte/retro" + (partita.Mazzo.Retro == 0 ? "blu" : "rosso") + ".png'></div>");
            } else {
                $("#carte-mazziere")
                    .append("<div class='carta sormonta' style='left:" + left + "px'><img src='/" + carta.PathImage + "' title='" + carta.Nome + "'></div>");
            }
        })
        //if (partita.Mazziere.Punteggio > 21) {
        //    $("#mazziere").addClass("back-red");
        //}
        let presenteg = false;
        ListaGiocatori(partita).forEach(function (giocatore) {
            let assicurazione = false;
            let div = $("[idGiocatore='" + giocatore.Id + "']");
            let existdiv = div.length > 0;
            if (div.length == 0) {
                div = $(".giocatorestamp").clone().removeClass("giocatorestamp d-none").addClass("giocatore");
                div.attr("idGiocatore", giocatore.Id);
            }
            div.find(".nome-giocatore").html(giocatore.Nome);
            div.find(".punti").css({'left' : (div.position().left + div.width() - 40) + 'px'})
                .css({'top' : (div.position().top + 10) + 'px'})
                .html(giocatore.Punteggio);
            div.find(".cassa-giocatore").html("Cassa: " + giocatore.SoldiTotali + " - Puntata: " + giocatore.PuntataCorrente);
            div.find(".perc").html("vinte: " + Math.round(giocatore.ManiVinte * 100 / partita.Giri) + "% - pari: " + Math.round(Math.abs(giocatore.ManiVinte - giocatore.ManiPerse) * 100 / partita.Giri) + "% - perse: " + Math.round(giocatore.ManiPerse * 100 / partita.Giri) + "%<br>RunningCount: " + giocatore.Strategia.Conteggio + " - TrueCount: " + giocatore.Strategia.TrueCount);
            div.find(".carte-giocatore").empty();
            div.find(".numerrori").text(errori);
            if (partita.VisualizzaSceltaStrategia && giocatore.Id == partita.IdGiocatoreMano && giocatore.Punteggio <= 21) {
                div.find(".strategia").html(giocatore.ProssimaScelta != "" ? 
                        "Prossima scelta da strategia: <b>" + giocatore.ProssimaScelta + "</b>" : 
                        "");
            }

            if (giocatore.Carte.length == 0) {
                div.find(".errore").text("");
            }
            giocatore.Carte.forEach(function (carta, index) {
                let left = index * 30 + 165 - giocatore.Carte.length * 17 + ((div.closest(".giocatore").width() - 400)/2);
                div.find(".carte-giocatore")
                    .append("<div class='carta sormonta' style='left:" + left + "px'><img src='/" + carta.PathImage + "' title='" + carta.Nome + "'></div>");
            })
            //if (giocatore.Risultato == 0) {
            //    div.addClass("back-green");
            //} else if (giocatore.Risultato == 1) {
            //    div.addClass("back-red");
            //}
            div.find(".strategia").addClass("d-none");
            if (giocatore.Id == $("#IdGiocatore").val() || giocatore.GiocatoreSplit != null && giocatore.GiocatoreSplit.Id == $("#IdGiocatore").val()) {
                if (giocatore.PuntataCorrente == 0) {
                    div.find(".txtPuntata").removeClass("d-none");
                    div.find(".btnPunta").removeClass("d-none");
                    div.find(".btnEsci").removeClass("d-none");
                    div.find(".fiches-giocatore").removeClass("d-none");
                    if (partita.VisualizzaSceltaStrategia) {
                        div.find(".strategia").removeClass("d-none").html(giocatore.ProssimaScelta != "" ?
                            "Prossima puntata da strategia: <b>" + giocatore.ProssimaPuntata + "</b>" :
                            "");
                    }

                } else {
                    if (partita.SecondaCartaInizialeMazziere && giocatore.SceltaAssicurazione == false && partita.Mazziere.Carte.length > 0 && partita.Mazziere.Carte[0].Numero == 1) {
                        //ShowConfirmSiNo("Assicurazione?", () => Assicurazione(partita.Id, giocatore.Id, 1), () => Assicurazione(partita.Id, giocatore.Id, 0));
                        assicurazione = true;
                        div.find(".btnAssicurazione").removeClass("d-none");
                        if (partita.VisualizzaSceltaStrategia) {
                            div.find(".strategia").removeClass("d-none");
                        }
                    } else {
                        div.find(".btnAssicurazione").addClass("d-none");
                    }
                    div.find(".txtPuntata").addClass("d-none");
                    div.find(".btnPunta").addClass("d-none");
                    div.find(".btnEsci").addClass("d-none");
                    div.find(".fiches-giocatore").addClass("d-none");
                    div.find(".btnContinua").addClass("d-none");
                }
                if (giocatore.Id == partita.IdGiocatoreMano && !assicurazione) {
                    if (giocatore.Punteggio <= 21) {
                        div.find(".btnStai").removeClass("d-none");
                        div.find(".btnChiama").removeClass("d-none");
                        div.find(".btnContinua").addClass("d-none");
                        if (partita.VisualizzaSceltaStrategia) {
                            div.find(".strategia").removeClass("d-none");
                        }
                    } else {
                        div.find(".btnStai").addClass("d-none");
                        div.find(".btnChiama").addClass("d-none");
                        div.find(".btnContinua").removeClass("d-none");
                        div.addClass("back-red");
                    }
                } else {
                    div.find(".btnStai").addClass("d-none");
                    div.find(".btnChiama").addClass("d-none");
                }
                if (partita.RaddoppiaNonDisponibile == false && giocatore.Id == partita.IdGiocatoreMano && giocatore.Carte.length == 2 && !assicurazione) {
                    div.find(".btnRaddoppia").removeClass("d-none");
                } else {
                    div.find(".btnRaddoppia").addClass("d-none");
                }
                if (partita.ArresaDisponibile && giocatore.Id == partita.IdGiocatoreMano && giocatore.Carte.length == 2 && !assicurazione) {
                    div.find(".btnArresa").removeClass("d-none");
                } else {
                    div.find(".btnArresa").addClass("d-none");
                }

                if (giocatore.Id == partita.IdGiocatoreMano && giocatore.CanSplit == true && !assicurazione) {
                    div.find(".btnSplit").removeClass("d-none");
                } else {
                    div.find(".btnSplit").addClass("d-none");
                }

            }
            if (giocatore.Id == partita.IdGiocatoreMano && giocatore.Punteggio <= 21) {
                div.addClass("back-azure");
            } else {
                div.removeClass("back-azure");
            }
            if (giocatore.Id == $("#IdGiocatore").val()) {
                presenteg=true;
            }

            if (!existdiv) {
                $("#giocatori").append(div);
            }

        })

        if (!presenteg && !partita.Iniziato) {
            $(".btnPartecipa").removeClass("d-none");
            $(".txtNomeGiocatore").removeClass("d-none");
        } else {
            $(".btnPartecipa").addClass("d-none");
            $(".txtNomeGiocatore").addClass("d-none");
        }

        //elimina i box
        $(".giocatore").map(function () {
            return $(this).attr("idgiocatore");
        }).get().forEach(function (item) {
            if (!partita.Giocatori.map(function (item) {
                return item.Id;
            }).includes(item)) {
                $("[idGiocatore='" + item + "']").remove();
            }
        });

        if (!partita.Mazziere.CartaCoperta) {
            VisualizzaVincitori(partita);
            $(".btnNuovaMano").removeClass("d-none");
            $(".strategia").addClass("d-none");
            //    if (GetStop() == false) {
            //        SetStop(true);
            //        setTimeout(function () {
            //            NuovaMano();
            //            SetStop(false);
            //            $(".giocatore .nome-giocatore:empty").closest(".giocatore").remove();
            //        }, 5000);
            //    }
        } else {
            $(".btnNuovaMano").addClass("d-none");
        }

        if (partita.Mazzo.NumScarti > 0) {
            $("#scarti img").attr("src", "/Carte/retro" + (partita.Mazzo.Retro == 0 ? "blu" : "rosso") + ".png");
            $("#scarti").removeClass("d-none");
            $("#num-scarti").html(partita.Mazzo.NumScarti + " carte scartate<br>su " + partita.NumMazziIniziali + " mazzi");
        } else {
            $("#scarti").addClass("d-none");
        }
    }

    function PulisceTavolo() {
        $("#nome-mazziere").html("");
        $("#carte-mazziere").html("");
        $(".giocatore").removeClass("back-red back-green");
        $("#mazziere").removeClass("back-red back-green");
        $(".giocatore .nome-giocatore").html("");
        //$(".giocatore").remove();
        //$(".back-red").removeClass("back-red");
    }

    function NuovaMano() {

        $.ajax({
            type: "POST",
            url: "/Home/NuovaMano",
            data: {
                id: idPartita
            },
            success: function (json) {
                let partita = JSON.parse(json);
                DisegnaTavolo(partita);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR);
            }
        });

    }

    function VisualizzaVincitori(partita) {
        partita.Giocatori.forEach(function (giocatore) {
            let div = $("[idGiocatore='" + giocatore.Id + "']");
            if (giocatore.Risultato == 1) { //vinto
                div.addClass("back-green");
            } else if (giocatore.Risultato == 2) { //perso
                div.addClass("back-red");
            }
        })
        if (partita.Mazziere.Punteggio > 21) {
            $("#mazziere").addClass("back-red");
        }
    }

    function SetInterval() {
        var timer = setInterval(function () {
            GetPartita();
        }, 1000);
    }

    function GetStop() {
        let ret = false;
        $.ajax({
            url: "/Home/GetStop",
            async: false,
            success: function (data) {
                ret = data;
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR);
            }
        });
        return ret;
    }

    function SetStop(stop) {
        $.ajax({
            type: "POST",
            url: "/Home/SetStop",
            data: {
                stop: stop
            },
            success: function (json) {
                
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR);
            }
        });

    }

    function ListaGiocatori(partita) {

        let a1 = partita.Giocatori.filter(function (item) { return item.Id == $("#IdGiocatore").val() });
        let a2 = partita.Giocatori.filter(function (item) { return item.Id != $("#IdGiocatore").val() });
        return a1.concat(a2);
    }


</script>